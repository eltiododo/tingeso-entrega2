pipeline {
    agent any

    tools {
        jdk 'jdknose'
        maven 'maven_3_8_2'
    }

    environment {
        DOCKER_CREDENTIALS_ID = 'docker-credentials'
        DOCKER_IMAGE_NAME = 'eltiododo/kartingrm-backend'
        JAR_FILE = 'target/*.jar' // This path is relative to the backend directory after the build
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository into the workspace
                checkout scm
            }
        }

         stage('Check Java Version') { // Added stage to check Java version
            steps {
                sh 'echo "JAVA_HOME: $JAVA_HOME"'
                sh 'java -version'
                sh 'mvn -v' // Also check Maven version and its Java environment
            }
        }

        stage('Build JAR') {
            steps {
                // Change directory to 'backend' where pom.xml is located
                dir('kartingrm/backend') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Change directory to 'backend' where the Dockerfile is located
                dir('kartingrm/backend') {
                    sh 'docker build -t ${DOCKER_IMAGE_NAME}:latest .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // Change directory to 'backend' before pushing the image
                dir('kartingrm/backend') {
                    withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID,
                                                     usernameVariable: 'DOCKER_USERNAME',
                                                     passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                        sh 'docker push ${DOCKER_IMAGE_NAME}:latest'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Backend successfully built and pushed to DockerHub!'
        }
        failure {
            echo 'Backend build or push failed!'
        }
        always {
            // Logout can happen from anywhere, but staying in a directory doesn't hurt
            // If you want to ensure logout happens from the workspace root, you could add a dir('/') here,
            // but it's generally not necessary for docker logout.
            sh 'docker logout'
        }
    }
}